<launch>
  <arg name="x" default="-4.0" />
  <arg name="y" default="3.0" />
  <arg name="t" default="0.0" />
  <arg name="c" default="0.3" />

  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
  <arg name="gui" value="true"/>
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro --> 


  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot_path_planner_astar)/world/Map.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/> <!-- Inert - see gazebo_ros_pkgs issue #491 -->
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <include file="$(find turtlebot_path_planner_astar)/launch/kobuki.launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="x" value="$(arg x)"/>
    <arg name="y" value="$(arg y)"/>
    <arg name="yaw" value="$(eval 3.14 * arg('t') / 180)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include>


  <!-- include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include -->

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>
  
  <node pkg="turtlebot_path_planner_astar" type="botmove.py" name="botmove" launch-prefix="gnome-terminal --command" >
     <param name="init_x" value ="$(eval 100.0 * arg('x'))" />
     <param name="init_y" value ="$(eval 100.0 * arg('y'))" />
     <param name="init_t" value ="$(arg t)" />
     <param name="clr" value ="$(eval 100.0 * arg('c'))" />
  </node>

  <!--arg name="record_data" default="0" / -->
  <!--node pkg="rosbag" type="record" name="rosbag_record_data" args="-a -x /camera(.*) -O $(find turtlebot_path_planner_astar)/results/BagData" if="$(arg record_data)"/ -->

 </launch>
